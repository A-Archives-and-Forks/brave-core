diff --git a/chrome/browser/resources/components/components.ts b/chrome/browser/resources/components/components.ts
index 116bf1ced0319e41cb5119ebc024cc6663756439..8f5d71222e864464ccf48fddb6d2c59e34045c7f 100644
--- a/chrome/browser/resources/components/components.ts
+++ b/chrome/browser/resources/components/components.ts
@@ -47,6 +47,15 @@ let currentComponentsData: Component[]|null = null;
  */
 function renderTemplate(componentsData: ComponentsData) {
   // This is the javascript code that processes the template:
+  componentsData.components.sort((a: Component, b: Component) => {
+    if (a.name < b.name) {
+      return -1;
+    } else if (a.name > b.name) {
+      return 1;
+    } else {
+      return 0;
+    }
+  })
   const input = new JsEvalContext(componentsData);
   const output =
       document.body.querySelector<HTMLElement>(
@@ -184,8 +193,24 @@ function handleCheckUpdate(node: HTMLElement) {
   chrome.send('checkUpdate', [String(node.id)]);
 }
 
+/**
+ * Requests that all of the components check for updates.
+ */
+function handleCheckUpdateAll() {
+  // Call `onclick` handlers for all individual update buttons on the page
+  const links =
+      document.body.querySelectorAll<HTMLButtonElement>('.button-check-update');
+  for (const link of links) {
+    link.click();
+  }
+}
+
 // Get data and have it displayed upon loading.
 document.addEventListener('DOMContentLoaded', function() {
   addWebUiListener('component-event', onComponentEvent);
+  getRequiredElement<HTMLButtonElement>('button-check-update-all').onclick = function(e) {
+    handleCheckUpdateAll();
+    e.preventDefault();
+  };
   requestComponentsData();
 });
