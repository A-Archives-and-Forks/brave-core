// Copyright (c) 2024 The Brave Authors. All rights reserved.
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this file,
// You can obtain one at https://mozilla.org/MPL/2.0/.

module brave_education.mojom;

// The set of commands sent by brave.com educational content and understood by
// the browser. They may trigger actions in the browser such as navigating to a
// WebUI or initiating a helpful flow. The implementer of the CommandHandler
// interface chooses which commands to handle and which ones to ignore depending
// on the platform or the milestone. Note that the implementations of these
// commands must be side-effect-free. Entries should not be renumbered and
// numeric values should never be reused.
enum Command {
  kOpenRewardsOnboarding = 1,
  // etc...
};

// Click information needed to determine user's desired window disposition.
struct ClickInfo {
  bool middle_button;
  bool alt_key;
  bool ctrl_key;
  bool meta_key;
  bool shift_key;
};

// Implemented by WebUIs that expose CommandHandlers to handle command requests
// from product education content.
interface CommandHandlerFactory {
  // Called when first initialized.
  CreateEducationCommandHandler(pending_receiver<CommandHandler> handler);
};

// Browser-side handler for requests from product education content.
interface CommandHandler {
  // Returns a value indicating whether the given command can be executed.
  CanExecuteCommand(Command command) => (bool can_execute);

  // Executes the specified command with the given click information. Returns
  // whether or not the command was executed.
  ExecuteCommand(Command command, ClickInfo click_info) => (bool executed);
};
